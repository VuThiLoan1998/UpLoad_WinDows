#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLBao
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OnThi")]
	public partial class QLBaoDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLoaiBao(LoaiBao instance);
    partial void UpdateLoaiBao(LoaiBao instance);
    partial void DeleteLoaiBao(LoaiBao instance);
    partial void InsertBao(Bao instance);
    partial void UpdateBao(Bao instance);
    partial void DeleteBao(Bao instance);
    #endregion
		
		public QLBaoDBDataContext() : 
				base(global::QLBao.Properties.Settings.Default.OnThiConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLBaoDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBaoDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBaoDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBaoDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LoaiBao> LoaiBaos
		{
			get
			{
				return this.GetTable<LoaiBao>();
			}
		}
		
		public System.Data.Linq.Table<Bao> Baos
		{
			get
			{
				return this.GetTable<Bao>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiBao")]
	public partial class LoaiBao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<Bao> _Baos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiBao()
		{
			this._Baos = new EntitySet<Bao>(new Action<Bao>(this.attach_Baos), new Action<Bao>(this.detach_Baos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiBao_Bao", Storage="_Baos", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<Bao> Baos
		{
			get
			{
				return this._Baos;
			}
			set
			{
				this._Baos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Baos(Bao entity)
		{
			this.SendPropertyChanging();
			entity.LoaiBao = this;
		}
		
		private void detach_Baos(Bao entity)
		{
			this.SendPropertyChanging();
			entity.LoaiBao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bao")]
	public partial class Bao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBao;
		
		private string _TenBao;
		
		private System.Nullable<int> _SoLuongBaoTrongQuy;
		
		private System.Nullable<double> _DonGia;
		
		private string _MaLoai;
		
		private EntityRef<LoaiBao> _LoaiBao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaoChanging(string value);
    partial void OnMaBaoChanged();
    partial void OnTenBaoChanging(string value);
    partial void OnTenBaoChanged();
    partial void OnSoLuongBaoTrongQuyChanging(System.Nullable<int> value);
    partial void OnSoLuongBaoTrongQuyChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    #endregion
		
		public Bao()
		{
			this._LoaiBao = default(EntityRef<LoaiBao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBao", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBao
		{
			get
			{
				return this._MaBao;
			}
			set
			{
				if ((this._MaBao != value))
				{
					this.OnMaBaoChanging(value);
					this.SendPropertyChanging();
					this._MaBao = value;
					this.SendPropertyChanged("MaBao");
					this.OnMaBaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBao", DbType="NVarChar(50)")]
		public string TenBao
		{
			get
			{
				return this._TenBao;
			}
			set
			{
				if ((this._TenBao != value))
				{
					this.OnTenBaoChanging(value);
					this.SendPropertyChanging();
					this._TenBao = value;
					this.SendPropertyChanged("TenBao");
					this.OnTenBaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongBaoTrongQuy", DbType="Int")]
		public System.Nullable<int> SoLuongBaoTrongQuy
		{
			get
			{
				return this._SoLuongBaoTrongQuy;
			}
			set
			{
				if ((this._SoLuongBaoTrongQuy != value))
				{
					this.OnSoLuongBaoTrongQuyChanging(value);
					this.SendPropertyChanging();
					this._SoLuongBaoTrongQuy = value;
					this.SendPropertyChanged("SoLuongBaoTrongQuy");
					this.OnSoLuongBaoTrongQuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="NVarChar(50)")]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LoaiBao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiBao_Bao", Storage="_LoaiBao", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiBao LoaiBao
		{
			get
			{
				return this._LoaiBao.Entity;
			}
			set
			{
				LoaiBao previousValue = this._LoaiBao.Entity;
				if (((previousValue != value) 
							|| (this._LoaiBao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiBao.Entity = null;
						previousValue.Baos.Remove(this);
					}
					this._LoaiBao.Entity = value;
					if ((value != null))
					{
						value.Baos.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("LoaiBao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
